# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# Provides longer scrollback:
HISTSIZE=2048
HISTFILESIZE=4096

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

export TERM=screen-256color

export COLOR_RESET="\[\033[m\]"
export COLOR_RED="\[\033[31m\]"
export COLOR_GREEN="\[\033[01;32m\]"

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

PROMPT_COMMAND='if [ $? = 0 ]; then DOLLAR_COLOR="\033[01;32m"; else DOLLAR_COLOR="\033[01;31m"; fi'

function correctness()
{
  CORRECTNESS=":("
  if [ $? -eq 0 ]; then
    CORRECTNESS=":)"
  fi

  printf "%s" "$CORRECTNESS"
}

rightprompt()
{
  CORRECTNESS=$( correctness )
  printf "%*s" $(($COLUMNS + 20)) "$(date +%H:%M) \\033[38;5;208m[\$?]\\033[0m"
}

makeprompt()
{
  last_command_result=$?
  # a nicer than the default bash prompt from my old Slackware box:
  return $last_command_result
}
# leftprompt='\[\e[0;32m\]\u\[\e[m\] \[\e[1;34m\]\w\[\e[m\] \[\e[1;32m\]\$\[\e[m\] \[\e[1;37m\]'
leftprompt='\[\e[0;32m\]\u\[\e[m\] \[\e[1;34m\]\w\[\e[m\] \[$(echo -ne $DOLLAR_COLOR)\]\$\[\033[m\] '
export PS1="\[$(tput sc; rightprompt; tput rc)\]$leftprompt"
unset color_prompt force_color_prompt

# Sources common exports, functions and aliases definitions:
if [ -f ~/.config/.shrc ]; then
    . ~/.config/.shrc
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

alias gr='grep'
alias tasks='leafpad /home/a.szczerbiak/Documents/Tasks &'

# truly colorful man pages:
man() {
    env LESS_TERMCAP_mb=$(printf "\e[1;31m") \
	LESS_TERMCAP_md=$(printf "\e[1;31m") \
	LESS_TERMCAP_me=$(printf "\e[0m") \
	LESS_TERMCAP_se=$(printf "\e[0m") \
	LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
	LESS_TERMCAP_ue=$(printf "\e[0m") \
	LESS_TERMCAP_us=$(printf "\e[1;32m") \
	man "$@"
}

# Enable programmable sdb completion features.
if [ -f ~/.sdb/.sdb-completion.bash ]; then
 source ~/.sdb/.sdb-completion.bash
fi
source /home/a.szczerbiak/Tools/tizen-studio/tools/ide/bin/tizen-autocomplete
